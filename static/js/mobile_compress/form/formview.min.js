define(function(d, n, p) {
    n = Backbone.View.extend({
        initialize: function(a) {
            this.formpluginUrl = "develop" == TEAMS.runMode ? "form/form-plugin" : "form" + lang_v + ".js";
            this.isAdmin = utils.isModuleAdmin("form");
            this.asyncSource = [this.formpluginUrl]
        },
        delegateEvents: function() {},
        render: function(a) {
            var f = this
              , c = a.callback
              , b = a.parentEl
              , g = a.formId
              , h = a.layoutId
              , e = a.type
              , k = a.readOnly
              , l = a.module
              , m = a.autoSave;
            b.html("");
            this.el = b;
            d.async(this.asyncSource, function() {
                f.isLoading("form/form-plugin");
                d.async("form/form-plugin", function(a) {
                    formPlugin.renderForm({
                        parentEl: b,
                        formId: g,
                        layoutId: h,
                        readOnly: k,
                        module: l,
                        autoSave: m,
                        callback: function(a) {
                            "company" == e && !f.isAdmin || "employee" == e || "subordinate" == e ? $(b).find(".j_mobileSubadd").remove() : ($(b).parent().find(".j_btn_save").removeClass("hide"),
                            $(b).parent().find(".j_btn_back").removeClass("hide"));
                            var d = a.form.name;
                            $(b).parent().find(".j_name").text(d);
                            c && c(a)
                        }
                    })
                })
            })
        },
        renderForm: function(a) {
            var f = a.callback
              , c = a.parentEl
              , b = a.formId
              , g = a.module
              , h = a.autoSave
              , e = a.layoutDetail || null
              , k = this;
            c.html("");
            this.el = c;
            d.async(this.asyncSource, function() {
                k.isLoading("form/form-plugin");
                d.async("form/form-plugin", function(a) {
                    formPlugin.renderForm({
                        parentEl: c,
                        formId: b,
                        module: g,
                        layoutDetail: e,
                        autoSave: h,
                        callback: function(a) {
                            f && f(a)
                        }
                    })
                })
            })
        },
        loadForm: function(a) {
            var f = this
              , c = a.callback
              , b = a.parentEl
              , g = a.dataId
              , h = a.layoutId
              , e = a.readOnly
              , k = a.module
              , l = a.newLayout
              , m = a.autoSave;
            this.el = b;
            window.systemInfo_print && (e = !0);
            d.async(this.asyncSource, function() {
                f.isLoading("form/form-plugin");
                d.async("form/form-plugin", function(a) {
                    formPlugin.renderFormData({
                        parentEl: b,
                        dataId: g,
                        readOnly: e,
                        layoutId: h,
                        module: k,
                        notDefault: !0,
                        newLayout: l,
                        autoSave: m,
                        callback: function(a) {
                            c && c(a)
                        }
                    })
                })
            })
        },
        isLoading: function(a) {
            a = seajs.cache[seajs.resolve(a)];
            null != a && null == a.exports
        },
        submit: function(a) {
            var f = this
              , c = a.callback
              , b = a.parentEl
              , g = a.dataStatus
              , h = a.module
              , e = a.submittype;
            d.async(this.formpluginUrl, function() {
                f.isLoading("form/form-plugin");
                d.async("form/form-plugin", function(a) {
                    formPlugin.saveFormData({
                        parentEl: b,
                        dataStatus: g,
                        module: h,
                        submittype: e,
                        callback: function(a) {
                            c && c(a)
                        }
                    })
                })
            })
        },
        submitCheck: function(a) {
            return formPlugin.submitCheck(a)
        },
        remove: function() {
            var a = this.el;
            window.formPlugin && formPlugin.destroyEvents(a)
        }
    });
    p.exports = n
});
